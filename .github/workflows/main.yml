name: Build and Test

on:
  workflow_dispatch:
    inputs:
      failJob:
        description: Fail the job?
        type: boolean
        required: false
        default: false
      releaseTicketNumber:
        description: Release ticket number
        type: string
        required: false
        default: ""

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: Report status to release ticket
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_REPO_DEMO }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'alexander-smolyakov',
              repo: 'release-process-demo',
              workflow_id: 'update_release_ticket.yml',
              ref: 'main',
              inputs: {
                ticketNumber: '${{ github.event.inputs.releaseTicketNumber }}',
                message: `✅ Release pipeline was launched successfully - [link](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`
              }
            });

      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Setup python version
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Run app
        run: python app.py

      - name: Run tests
        run: python tests.py

      - name: Report status to release ticket
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_REPO_DEMO }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'alexander-smolyakov',
              repo: 'release-process-demo',
              workflow_id: 'update_release_ticket.yml',
              ref: 'main',
              inputs: {
                ticketNumber: '${{ github.event.inputs.releaseTicketNumber }}',
                message: `✅ Release pipeline was passed successfully - [link](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`
              }
            });

      - name: Determine tag
        run: 'echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV'

      - name: "Create release"
        uses: "actions/github-script@v6"
        id: release-link
        with:
          debug: true
          result-encoding: string
          script: |
            try {
              const release = await github.rest.repos.createRelease({
                draft: true,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: true,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });
              return release.html_url;
            } catch (error) {
              core.setFailed(error.message);
            }

      - name: Report status to release ticket
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_REPO_DEMO }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'alexander-smolyakov',
              repo: 'release-process-demo',
              workflow_id: 'update_release_ticket.yml',
              ref: 'main',
              inputs: {
                ticketNumber: '${{ github.event.inputs.releaseTicketNumber }}',
                message: `✅ Release published - [link](${{ steps.release-link.outputs.result }})`
              }
            });

      - name: Pass or fail job
        run: exit 1
        if: github.event.inputs.failJob == 'true'
